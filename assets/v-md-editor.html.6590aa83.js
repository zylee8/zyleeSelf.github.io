import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as s,f as t}from"./app.0828ac52.js";const e={},o=t(`<h1 id="v-md-editor富文本编辑器-使用方法及常用配置" tabindex="-1"><a class="header-anchor" href="#v-md-editor富文本编辑器-使用方法及常用配置" aria-hidden="true">#</a> v-md-editor富文本编辑器 使用方法及常用配置</h1><h2 id="安装v-md-editor" tabindex="-1"><a class="header-anchor" href="#安装v-md-editor" aria-hidden="true">#</a> 安装v-md-editor</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code># use npm
npm i @kangc<span class="token operator">/</span>v<span class="token operator">-</span>md<span class="token operator">-</span>editor <span class="token operator">-</span><span class="token constant">S</span>

# use yarn
yarn add @kangc<span class="token operator">/</span>v<span class="token operator">-</span>md<span class="token operator">-</span>editor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在vue中注册" tabindex="-1"><a class="header-anchor" href="#在vue中注册" aria-hidden="true">#</a> 在vue中注册</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> VueMarkdownEditor <span class="token keyword">from</span> <span class="token string">&#39;@kangc/v-md-editor&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;@kangc/v-md-editor/lib/style/base-editor.css&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> vuepressTheme <span class="token keyword">from</span> <span class="token string">&#39;@kangc/v-md-editor/lib/theme/vuepress.js&#39;</span><span class="token punctuation">;</span>

VueMarkdownEditor<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>vuepressTheme<span class="token punctuation">)</span><span class="token punctuation">;</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueMarkdownEditor<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>v<span class="token operator">-</span>md<span class="token operator">-</span>editor v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> height<span class="token operator">=</span><span class="token string">&quot;400px&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>v<span class="token operator">-</span>md<span class="token operator">-</span>editor<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="预览组件" tabindex="-1"><a class="header-anchor" href="#预览组件" aria-hidden="true">#</a> 预览组件</h2><h3 id="全局配置main-js" tabindex="-1"><a class="header-anchor" href="#全局配置main-js" aria-hidden="true">#</a> 全局配置main.js：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> VMdPreviewHtml <span class="token keyword">from</span> <span class="token string">&#39;@kangc/v-md-editor/lib/preview-html&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;@kangc/v-md-editor/lib/style/preview-html.css&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 引入使用主题的样式</span>
<span class="token comment">// import &#39;@kangc/v-md-editor/lib/theme/style/vuepress&#39;;</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VMdPreviewHtml<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="预览组件使用" tabindex="-1"><a class="header-anchor" href="#预览组件使用" aria-hidden="true">#</a> 预览组件使用</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> preview<span class="token operator">-</span><span class="token keyword">class</span> 为主题的样式类名，例如vuepress就是vuepress<span class="token operator">-</span>markdown<span class="token operator">-</span>body <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>v<span class="token operator">-</span>md<span class="token operator">-</span>preview<span class="token operator">-</span>html <span class="token operator">:</span>html<span class="token operator">=</span><span class="token string">&quot;html&quot;</span> preview<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;vuepress-markdown-body&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>v<span class="token operator">-</span>md<span class="token operator">-</span>preview<span class="token operator">-</span>html<span class="token operator">&gt;</span>

<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3><p>组件渲染的是markdown格式的数据，如果需要转化html结构的数据，需要使用其他工具。</p><h4 id="将html的数据转为markdown的数据格式" tabindex="-1"><a class="header-anchor" href="#将html的数据转为markdown的数据格式" aria-hidden="true">#</a> 将html的数据转为markdown的数据格式</h4><p>1、安装turndown</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm install turndown
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、转换js代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> TurndownService <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;turndown&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span>
<span class="token keyword">var</span> turndownService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TurndownService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// this.html为数据库保存的html格式，转换成了markdown格式</span>
<span class="token keyword">var</span> markdown <span class="token operator">=</span> turndownService<span class="token punctuation">.</span><span class="token function">turndown</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> markdown<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="将markdown的数据转为html的数据格式" tabindex="-1"><a class="header-anchor" href="#将markdown的数据转为html的数据格式" aria-hidden="true">#</a> 将markdown的数据转为html的数据格式</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> VueMarkdownEditor<span class="token punctuation">,</span> <span class="token punctuation">{</span> xss <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@kangc/v-md-editor&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 调用方法将 markdown 转换成 html 并使用 xss 过滤</span>
<span class="token keyword">const</span> html <span class="token operator">=</span> xss<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>VueMarkdownEditor<span class="token punctuation">.</span>themeConfig<span class="token punctuation">.</span>markdownParser<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>markdown<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>html <span class="token operator">=</span> html<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用api属性" tabindex="-1"><a class="header-anchor" href="#常用api属性" aria-hidden="true">#</a> 常用API属性</h2><h4 id="_1-text-string类型" tabindex="-1"><a class="header-anchor" href="#_1-text-string类型" aria-hidden="true">#</a> 1.text String类型</h4><p>需要解析的markdown 字符串(只有预览组件支持该属性)</p><h4 id="_2-v-model-string类型" tabindex="-1"><a class="header-anchor" href="#_2-v-model-string类型" aria-hidden="true">#</a> 2.v-model String类型</h4><p>双向绑定(只有编辑组件支持该属性)</p><h4 id="_3-mode-string类型-默认值editable" tabindex="-1"><a class="header-anchor" href="#_3-mode-string类型-默认值editable" aria-hidden="true">#</a> 3.mode String类型,默认值editable</h4><p>模式（可选值：edit纯编辑模式、 editable编辑与预览模式、preview纯预览模式）</p><h4 id="_4-height-string类型" tabindex="-1"><a class="header-anchor" href="#_4-height-string类型" aria-hidden="true">#</a> 4.height String类型</h4><p>正常模式下编辑器的高度</p><h4 id="_5-default-show-toc-boolean类型-默认值false" tabindex="-1"><a class="header-anchor" href="#_5-default-show-toc-boolean类型-默认值false" aria-hidden="true">#</a> 5.default-show-toc boolean类型，默认值false</h4><p>是否默认显示目录导航</p><h4 id="_6-default-fullscreen-boolean类型-默认值false" tabindex="-1"><a class="header-anchor" href="#_6-default-fullscreen-boolean类型-默认值false" aria-hidden="true">#</a> 6.default-fullscreen boolean类型，默认值false</h4><p>是否默认开启全屏</p><h4 id="_7-left-toolbar-类型-string" tabindex="-1"><a class="header-anchor" href="#_7-left-toolbar-类型-string" aria-hidden="true">#</a> 7.left-toolbar 类型：string</h4><p>左侧工具栏</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>undo</td><td>撤销</td></tr><tr><td>redo</td><td>重做</td></tr><tr><td>clear</td><td>清空</td></tr><tr><td>h</td><td>标题</td></tr><tr><td>bold</td><td>粗体</td></tr><tr><td>italic</td><td>斜体</td></tr><tr><td>strikethrough</td><td>中划线</td></tr><tr><td>quote</td><td>引用</td></tr><tr><td>ul</td><td>无序列表</td></tr><tr><td>ol</td><td>有序列表</td></tr><tr><td>table</td><td>表格</td></tr><tr><td>hr</td><td>分割线</td></tr><tr><td>link</td><td>链接</td></tr><tr><td>image</td><td>插入图片</td></tr><tr><td>code</td><td>代码块</td></tr><tr><td>save</td><td>保存，点击后触发save事件</td></tr></tbody></table><h4 id="_8-right-toolbar-类型-string" tabindex="-1"><a class="header-anchor" href="#_8-right-toolbar-类型-string" aria-hidden="true">#</a> 8.right-toolbar 类型：String</h4><p>右侧工具栏</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>preview</td><td>预览</td></tr><tr><td>toc</td><td>目录导航</td></tr><tr><td>sync-scroll</td><td>同步滚动</td></tr><tr><td>fullscreen</td><td>全屏</td></tr></tbody></table>`,40),p=[o];function r(i,d){return n(),s("div",null,p)}const u=a(e,[["render",r],["__file","v-md-editor.html.vue"]]);export{u as default};
