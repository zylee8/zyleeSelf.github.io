const e=JSON.parse('{"key":"v-6533af52","path":"/posts/promise1123.html","title":"ES6中 Promise 如何理解？使用场景有哪些？","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2022-11-11T00:00:00.000Z","category":["JavaScript"],"tag":["异步","promise"],"sticky":true,"description":"一、介绍 Promise，译为承诺，是异步编程的一种解决方案，比传统的解决方案（回调函数）更加合理和更加强大 在以往我们如果处理多层异步操作，我们往往会像下面那样编写我们的代码 阅读上面代码，是不是很难受，上述形成了经典的回调地狱 现在通过Promise的改写上面的代码 瞬间感受到promise解决异步操作的优点： 链式操作减低了编码难度; 代码可读性...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/promise1123.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"ES6中 Promise 如何理解？使用场景有哪些？"}],["meta",{"property":"og:description","content":"一、介绍 Promise，译为承诺，是异步编程的一种解决方案，比传统的解决方案（回调函数）更加合理和更加强大 在以往我们如果处理多层异步操作，我们往往会像下面那样编写我们的代码 阅读上面代码，是不是很难受，上述形成了经典的回调地狱 现在通过Promise的改写上面的代码 瞬间感受到promise解决异步操作的优点： 链式操作减低了编码难度; 代码可读性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"异步"}],["meta",{"property":"article:tag","content":"promise"}],["meta",{"property":"article:published_time","content":"2022-11-11T00:00:00.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"一、介绍","slug":"一、介绍","link":"#一、介绍","children":[{"level":3,"title":"状态","slug":"状态","link":"#状态","children":[]},{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]}]},{"level":2,"title":"二、用法","slug":"二、用法","link":"#二、用法","children":[{"level":3,"title":"实例方法","slug":"实例方法","link":"#实例方法","children":[]},{"level":3,"title":"构造函数方法","slug":"构造函数方法","link":"#构造函数方法","children":[]}]},{"level":2,"title":"三、使用场景","slug":"三、使用场景","link":"#三、使用场景","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{},"readingTime":{"minutes":6.41,"words":1923},"filePathRelative":"posts/promise1123.md","localizedDate":"2022年11月11日"}');export{e as data};
